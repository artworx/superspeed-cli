#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'superspeed-cli'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/superspeed-cli` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/superspeed-cli now"
  exit 64
end

include GLI::App

program_desc 'Cli wrapper around superspeed'

version SuperspeedCli::VERSION

subcommand_option_handling :normal
arguments :strict

#desc 'Describe some switch here'
#switch [:s,:switch]

#desc 'Describe some flag here'
#default_value 'the default'
#arg_name 'The name of the argument'
#flag [:f,:flagname]

desc 'Login to superspeed'
command :login do |c|
  c.action do |global_options,options,args|
    s = SuperspeedCli::App.new(Mechanize.new)
    username = ask("Enter your username:  ") do |q|
      q.default = `whoami`.strip
      q.echo = true
    end
    password = ask("Enter your password:  ") { |q| q.echo = "*" }

    s.login(username, password)
    s.save_credentials
  end
end

desc 'List logs for a given month'
command :logs do |c|

  c.desc "Output format(table, json) "
  c.default_value 'table'
  c.flag :f, must_match: ['table', 'json']

  c.desc "Date"
  c.default_value Date.today.to_s
  c.flag :d, :date

  c.action do |global_options,options,args|
    s = SuperspeedCli::App.new(Mechanize.new)
    s.load_credentials
    s.load_month(Date.parse(options[:date]))

    out = s.days_info

    if options[:f] == 'table'
      tp out, :id, :date, :day, :company, :companyId, :project, :projectId, :task, :taskId, :hours, :description
    else
      print out.to_json
    end
  end
end

desc 'Create log'
arg_name 'task_id description'
command :create_log do |c|
  c.desc "Date"
  c.default_value Date.today.to_s
  c.flag :d, :date

  c.desc "End date"
  c.default_value Date.today.to_s
  c.flag :e, :end

  c.desc "Hours"
  c.default_value 8
  c.flag :h, :hours

  c.desc "Task name"
  c.default_value "Implementation"
  c.flag :t, :task

  c.action do |global_options,options,args|
    s = SuperspeedCli::App.new(Mechanize.new)
    s.load_credentials

    start_date  = Date.parse(options[:date])
    end_date  = Date.parse(options[:end])

    if end_date < start_date
      end_date = start_date
    end

    log = SuperspeedCli::Log.new({
      start_date: start_date,
      end_date: end_date,
      task: options[:task],
      hours: options[:hours],
      task_id: args[0],
      description: args[1],
    })

    s.create_log(log)
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
